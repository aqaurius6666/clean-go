// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/aqaurius6666/clean-go/internal/config"
	"github.com/aqaurius6666/clean-go/internal/entities"
	"github.com/aqaurius6666/clean-go/internal/generics"
	"github.com/aqaurius6666/clean-go/internal/repositories/orm"
	"github.com/aqaurius6666/clean-go/internal/restapi"
	"github.com/aqaurius6666/clean-go/internal/restapi/v1"
	"github.com/aqaurius6666/clean-go/internal/usecases"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/sirupsen/logrus"
)

// Injectors from wire.go:

func BuildApp(ctx context.Context, cfg config.AppConfig, manualCfg ManualConfig) (*App, error) {
	engine := gin.New()
	logger := manualCfg.Logger
	authConfig := cfg.Auth
	dbConfig := cfg.Db
	db, err := orm.ConnectGorm(dbConfig)
	if err != nil {
		return nil, err
	}
	ormRepository := &orm.ORMRepository{
		DB: db,
	}
	tracerProvider := manualCfg.Tracer
	usecasesService := &usecases.UsecasesService{
		Logger:        logger,
		AuthConfig:    authConfig,
		Repo:          ormRepository,
		TraceProvider: tracerProvider,
	}
	handler := &v1.Handler{
		Usecase: usecasesService,
	}
	middleware := &v1.Middleware{
		L:        logger,
		Usecases: usecasesService,
	}
	restAPIServer := &restapi.RestAPIServer{
		G:          engine,
		Logger:     logger,
		Handler:    handler,
		Middleware: middleware,
	}
	app := &App{
		RestApiServer: restAPIServer,
		Logger:        logger,
	}
	return app, nil
}

// wire.go:

type App struct {
	RestApiServer restapi.Server
	Logger        *logrus.Logger
}

// wire provider set
var (
	UsecaseSet = wire.NewSet(wire.Struct(new(usecases.UsecasesService), "*"), wire.Bind(new(usecases.Usecases), new(*usecases.UsecasesService)))
	ORMSet     = wire.NewSet(wire.Bind(new(usecases.Repository), new(*orm.ORMRepository)), wire.Bind(new(usecases.Migrator), new(*orm.ORMRepository)), wire.Struct(new(orm.ORMRepository), "*"), orm.ConnectGorm)

	RestSet      = wire.NewSet(wire.Bind(new(restapi.Server), new(*restapi.RestAPIServer)), wire.Struct(new(restapi.RestAPIServer), "*"), wire.Bind(new(restapi.Handler), new(*v1.Handler)), wire.Bind(new(restapi.Middleware), new(*v1.Middleware)), RestApiV1Set, gin.New)
	RestApiV1Set = wire.NewSet(wire.Struct(new(v1.Handler), "*"), wire.Struct(new(v1.Middleware), "*"))
)

// interface constraints
var (
	_ usecases.Usecases = (*usecases.UsecasesService)(nil)
	// _ usecases.Repository                        = (*odm.ODMRepository)(nil)
	_ generics.GenericRepository[*entities.User] = (*generics.ORMGenericRepository[*entities.User])(nil)
	_ restapi.Server                             = (*restapi.RestAPIServer)(nil)
	_ restapi.Handler                            = (*v1.Handler)(nil)
	_ restapi.Middleware                         = (*v1.Middleware)(nil)
)
